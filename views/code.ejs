<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <script type="text/javascript" src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.js"></script>
  <!--<link rel="stylesheet" href='../app.js' />-->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Lato" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

  <!-- Compiled and minified JavaScript -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>

</head>

<body>
<nav>
  <div class="nav-wrapper" style="background-color: #B8B8FF; padding-bottom: 20px" >
    <a href="/" class="brand-logo black-text" style="padding-left: 10px">Don't share my code</a>
    <ul id="nav-mobile" class="right hide-on-med-and-down">
      <li><a href="/about" class="black-text flow-text">About</a></li>
    </ul>
  </div>
</nav>

<div class="container center-align">
  <h1 class="center-align">Share the join link</h1>
  <p id = "url" class="flow-text center-align"></p>

  <select id="change_chart" onchange="changeLanguage(this)">
    <option value="python" selected>python</option>
    <option value="JS">JS</option>
    <option value="plain">plain text</option>
  </select>

</div>
<p id="fail" style="display:none">
  <%= nickname %>
</p>
<div class="">
  <div class="row" >
    <div class="col s12 m12 l3" >
      <h3>Active Users</h3>
      <div id="userList">

      </div>
    </div>
    <div class="col s12 m12 l6">
      <h3 class="center-align">Editor</h3>
      <div id = "editor" style="position: relative; height: 500px ; width: 100%; border-radius: 10px; padding-top: 100px" >

      </div>
    </div>
    <div class="col l3">
      <h3 class="center-align">Chat</h3>
      <div id="messages" style="height: 400px;overflow: auto" >
        <p id='useless'>
          There are currently no messsages to display
        </p>
      </div>
      <div class="messageInput">
        <input id="userMessage" type="text" name="message" placeholder="Enter Message" />
        <button onclick='sendMessage()' id ='msgBtn' class='btn btn-primary'>Send</button>
      </div>
    </div>

    <!--<div class='l12 s12 m12 buttonDiv' id='buttonDiv'>-->
      <!--<a href="#" class="button" id="btn-download" download="code.txt">Download file</a>-->
    <!--</div>-->
  </div>
</div>
</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js" integrity="sha512-GZ1RIgZaSc8rnco/8CXfRdCpDxRCphenIiZ2ztLy3XQfCbQUSCuk8IudvNHxkRA3oUg6q0qejgN/qqyG1duv5Q==" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>

<script type="text/javascript">

  let y = document.getElementById('url');
url.innerText = window.location.href;

  document.addEventListener('DOMContentLoaded', function() {
      var elems = document.querySelectorAll('select');
      var instances = M.FormSelect.init(elems, {});
  });

</script>
<script>
    let input = document.getElementById("userMessage");
    input.addEventListener("keyup", function(event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("msgBtn").click();
        }
    });
</script>
<script>
    let nickname = document.getElementById("fail").innerText
    nickname = nickname.replace(/\s/g, "")
    let users = []
   let msgs = []

    function updateMessages(sender, msg) {

        document.getElementById('useless').innerText = ""
        let messages = document.getElementById('messages')
        let message_paragraph = document.createElement("p");
        // message_paragraph.classList.add("message_paragraph");
        // let textnode = document.createTextNode(from + ': ' + msg);
        // message_paragraph.appendChild(textnode);
        // messages.appendChild(message_paragraph);
        message_paragraph.innerHTML = sender + " : " + msg
        messages.appendChild(message_paragraph)
    }

    function sendMessage() {
        let msg = document.getElementById("userMessage").value;
        document.getElementById("userMessage").value = "";
        socket.emit("message", msg);
        msgs.push({
            from: nickname,
            message: msg
        });
        console.log(msgs);

        updateMessages(nickname, msg)

    }
    function updateUserList() {
        document.getElementById("userList").innerHTML = "";
        for (let i = 0; i < users.length; i++) {
            let node = document.createElement("p");
            node.classList.add("nameParagraph");
            let hr = document.createElement("hr");
            hr.classList.add("nameParagraphUnderline");
            let textnode = document.createTextNode(users[i]);
            node.appendChild(textnode);
            document.getElementById("userList").appendChild(node);
            document.getElementById("userList").appendChild(hr);
        }
    }



    let socket = io()
    let urlArray = window.location.href.split("/");

    socket.emit("room", {
        id: String(urlArray[urlArray.length - 1]),
        nickname: nickname
    });

     let editor = ace.edit("editor");
     editor.setTheme("ace/theme/monokai");

    editor.session.setMode("ace/mode/python");
    editor.setShowPrintMargin(false);

    function changeLanguage(option){
        console.log(option.value)
        if(option.value == "python"){
          editor.session.setMode("ace/mode/python")
            socket.emit('change_language', {language: "python", id: String(urlArray[urlArray.length - 1])})

        }else if(option.value == "JS"){
            editor.session.setMode("ace/mode/javascript")
            socket.emit('change_language', {language: "javascript", id: String(urlArray[urlArray.length - 1])})
        }
        else{
            editor.session.setMode("ace/mode/plain_text")
            socket.emit('change_language', {language: "plain_text", id: String(urlArray[urlArray.length - 1])})

        }
    }


    let allowed = true

    socket.on("code", function(data){
        console.log(data)
        allowed = false
        editor.setValue(data)
        allowed = true
    })

    socket.on("message", function addNewMessage(data) {
        // msgs.push(data);
        updateMessages(data.from,data.message)
        // console.log(msgs);
    });

    socket.on("on_page_load_messages", function loadPageMessages(arr) {
        // for (var item of arr) {
        //   msgs.push(item);
        // }
        // console.log(msgs);
        for(var item of arr){
            updateMessages(item.from,item.message)
        }
    });

    socket.on("on_page_load_code", function loadPageCode(code) {
        // for (var item of arr) {
        //   msgs.push(item);
        // }
        // console.log(msgs);
      editor.session.setMode("ace/mode/"+code)
    });

    socket.on("change_language", function changeLang(code) {
        // for (var item of arr) {
        //   msgs.push(item);
        // }
        // console.log(msgs);
        console.log(code)
        let element = document.getElementById('change_chart');
        let select = 'python'
        if(code == "javascript"){
            select = 'JS'
        }
        else if(code == "plain_text"){
            select = "plain"
        }
        for ( let i = 0; i = element.options.length; i++){
           if(element.options[i].value == select){
               element.options[i].selected = true;

               break;
           }
        }
        editor.session.setMode("ace/mode/"+code)
    });

    socket.on("on_page_load_code", function(data){
        allowed = false
        editor.setValue(data)
        allowed = true
    })

    socket.on('new_joiner', function(data){
        users.push(data);
        console.log(users);
        updateUserList();
    })

    socket.on('on_page_load_users', function(data){
        for (let item of data) {
            users.push(item);
        }
        console.log(users);
        updateUserList();
    })

  socket.on("user_left", function(data){
      let index = users.indexOf(socket.nickname);
      users.splice(index, 1);
      console.log(users);
      updateUserList();
  })

    editor.resize()

    editor.on("change", function(e){
        if(allowed) {
            socket.emit("code", {code: editor.getValue(), id: String(urlArray[urlArray.length - 1])})
        }
    })


    let button = document.getElementById("btn-download");
    button.addEventListener("click", function(e) {
        let code = editor.getValue();
        let element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(code));
        element.setAttribute('download', 'code.txt');

        element.style.display = 'none';
        document.body.appendChild(element);

        element.click();

        document.body.removeChild(element);

    });

</script>



</html>
